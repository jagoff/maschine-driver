# Simple Makefile for Maschine Mikro Driver
# Compiles the driver without Xcode project

CC = clang++
CFLAGS = -std=c++17 -Wall -Wextra -Werror -fno-exceptions -fno-rtti
INCLUDES = -I/System/Library/Frameworks/Kernel.framework/Headers \
           -I/System/Library/Frameworks/IOKit.framework/Headers \
           -I/System/Library/Frameworks/CoreMIDI.framework/Headers \
           -I/System/Library/Frameworks/CoreFoundation.framework/Headers

LIBS = -framework IOKit -framework CoreMIDI -framework CoreFoundation

TARGET = MaschineMikroDriver.kext
SOURCES = MaschineMikroDriver/MaschineMikroDriver.cpp
OBJECTS = $(SOURCES:.cpp=.o)

.PHONY: all clean build install load unload test

all: build

build: $(TARGET)

$(TARGET): $(OBJECTS)
	@echo "Linking $(TARGET)..."
	$(CC) $(CFLAGS) -bundle -o $(TARGET) $(OBJECTS) $(LIBS)
	@echo "Creating kext bundle..."
	mkdir -p $(TARGET)/Contents/MacOS
	mv $(TARGET) $(TARGET)/Contents/MacOS/
	cp MaschineMikroDriver/Info.plist $(TARGET)/Contents/
	@echo "Build completed successfully"

%.o: %.cpp
	@echo "Compiling $<..."
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

clean:
	@echo "Cleaning build artifacts..."
	rm -f $(OBJECTS) $(TARGET)
	rm -rf build/
	@echo "Clean completed"

install: build
	@echo "Installing $(TARGET)..."
	sudo rm -rf /Library/Extensions/$(TARGET)
	sudo cp -R $(TARGET) /Library/Extensions/
	sudo chown -R root:wheel /Library/Extensions/$(TARGET)
	sudo chmod -R 755 /Library/Extensions/$(TARGET)
	@echo "Installation completed"

load:
	@echo "Loading $(TARGET)..."
	sudo kextunload -b com.nativeinstruments.maschine-mikro-driver 2>/dev/null || true
	sudo kextload /Library/Extensions/$(TARGET)
	@echo "Driver loaded successfully"

unload:
	@echo "Unloading $(TARGET)..."
	sudo kextunload -b com.nativeinstruments.maschine-mikro-driver 2>/dev/null || true
	@echo "Driver unloaded"

test:
	@echo "Running driver tests..."
	./test_driver.sh

status:
	@echo "Checking driver status..."
	@if kextstat | grep -q "MaschineMikroDriver"; then \
		echo "✓ Driver is loaded"; \
	else \
		echo "✗ Driver is not loaded"; \
	fi
	@if [ -d "/Library/Extensions/$(TARGET)" ]; then \
		echo "✓ Driver is installed"; \
	else \
		echo "✗ Driver is not installed"; \
	fi

dev: clean build install load status

reload: unload build install load status

help:
	@echo "Maschine Mikro Driver Simple Makefile"
	@echo ""
	@echo "Available targets:"
	@echo "  build      - Build the driver"
	@echo "  clean      - Clean build artifacts"
	@echo "  install    - Install the driver to system"
	@echo "  load       - Load the driver into kernel"
	@echo "  unload     - Unload the driver from kernel"
	@echo "  status     - Check driver status"
	@echo "  test       - Run driver tests"
	@echo "  dev        - Development workflow (clean, build, install, load, status)"
	@echo "  reload     - Quick rebuild and reload"
	@echo "  help       - Show this help message"
	@echo ""
	@echo "Examples:"
	@echo "  make dev        # Full development workflow"
	@echo "  make reload     # Quick rebuild and reload"
	@echo "  make test       # Run tests" 